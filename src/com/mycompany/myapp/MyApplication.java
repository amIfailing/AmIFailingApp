package com.mycompany.myapp;

import static com.codename1.ui.CN.*;
import com.codename1.io.Log;
import com.codename1.ui.Button;
import com.codename1.ui.Display;
import com.codename1.ui.FontImage;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.animations.CommonTransitions;
import com.codename1.ui.layouts.BorderLayout;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.ui.layouts.FlowLayout;
import com.codename1.ui.layouts.LayeredLayout;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.ui.util.UITimer;
import java.io.IOException;
import com.codename1.ui.Toolbar;
import com.codename1.io.NetworkEvent;
import com.codename1.ui.CheckBox;
import com.codename1.ui.Container;
import com.codename1.ui.TextArea;
import com.codename1.ui.TextField;
import com.codename1.ui.table.TableLayout;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class MyApplication {

    private Form current;
    private Resources theme;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if(err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });        
    }
    
    public void start() {
        if(current != null){
            current.show();
            return;
        }
        
        //Variables?
        boolean array;
        
        TableLayout tl;
        int spanButton = 2;
        if(Display.getInstance().isTablet()) 
        {
            tl = new TableLayout(7, 2);
        } 
        else 
        {
            tl = new TableLayout(14, 1);
            spanButton = 1;
        }
        tl.setGrowHorizontally(true);

        Form hi = new Form("Add Course", new BoxLayout(BoxLayout.Y_AXIS));
        hi.setLayout(tl);
        
        TextField name = new TextField("", "Course Name", 20, TextArea.ANY);
        
        //Should rearrange these so they're in alphabetical order #fixlater         
        CheckBox examsCheck = new CheckBox("Exams");
        Container examsCountContainer = new Container(new BorderLayout());
        examsCountContainer.add(BorderLayout.WEST, new Label("Number of exams:"));
        examsCountContainer.add(BorderLayout.CENTER, new TextField(""));
        Container examsWeight = new Container(new BorderLayout());
        examsWeight.add(BorderLayout.WEST, new Label("Weight:"));
        examsWeight.add(BorderLayout.CENTER, new TextField(""));

        CheckBox homeworksCheck = new CheckBox("Homeworks");
        Container hmwkCountContainer = new Container(new BorderLayout());
        hmwkCountContainer.add(BorderLayout.WEST, new Label("Number of homeworks:"));
        hmwkCountContainer.add(BorderLayout.CENTER, new TextField(""));
        Container hmwkWeight = new Container(new BorderLayout());
        hmwkWeight.add(BorderLayout.WEST, new Label("Weight:"));
        hmwkWeight.add(BorderLayout.CENTER, new TextField(""));

        CheckBox papersCheck = new CheckBox("Papers");
        Container papersCountContainer = new Container(new BorderLayout());
        papersCountContainer.add(BorderLayout.WEST, new Label("Number of papers:"));
        papersCountContainer.add(BorderLayout.CENTER, new TextField(""));
        Container papersWeight = new Container(new BorderLayout());
        papersWeight.add(BorderLayout.WEST, new Label("Weight:"));
        papersWeight.add(BorderLayout.CENTER, new TextField(""));
        
        CheckBox projectsCheck = new CheckBox("Projects");
        Container projectsCountContainer = new Container(new BorderLayout());
        projectsCountContainer.add(BorderLayout.WEST, new Label("Number of projects:"));
        projectsCountContainer.add(BorderLayout.CENTER, new TextField(""));
        Container projectsWeight = new Container(new BorderLayout());
        projectsWeight.add(BorderLayout.WEST, new Label("Weight:"));
        projectsWeight.add(BorderLayout.CENTER, new TextField(""));
        
        CheckBox quizCheck = new CheckBox("Quizzes");
        Container quizCountContainer = new Container(new BorderLayout());
        quizCountContainer.add(BorderLayout.WEST, new Label("Number of Quizzes:"));
        quizCountContainer.add(BorderLayout.CENTER, new TextField(""));
        Container quizWeight = new Container(new BorderLayout());
        quizWeight.add(BorderLayout.WEST, new Label("Weight:"));
        quizWeight.add(BorderLayout.CENTER, new TextField(""));
   
        Button next = new Button("Next");
        
        hi.add("Course Name").add(name);
        hi.add(quizCheck);
        hi.add(quizWeight).add(quizCountContainer);
        hi.add(homeworksCheck);
        hi.add(hmwkWeight).add(hmwkCountContainer);
        hi.add(examsCheck);
        hi.add(examsWeight).add(examsCountContainer);
        hi.add(papersCheck);
        hi.add(papersWeight).add(papersCountContainer);
        hi.add(projectsCheck);
        hi.add(projectsWeight).add(projectsCountContainer);
        hi.add(next);
        
        hi.show();
        
      
        //Code for the end of the "add course" page  
        /*{
            projectsCheck.addActionListener(l);
            examsCheck.addActionListener(l);
            quizzesCheck.addActionListener(l);
            papersCheck.addActionListener(l);
        }
        */
        
        //Code for the quiz page  
        /*{
        
        
        }
        */
        
    }

    public void stop() {
        current = getCurrentForm();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = getCurrentForm();
        }
    }
    
    public void destroy() {
    }

}
